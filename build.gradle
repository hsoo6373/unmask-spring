/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the war plugin to support war packaging
    id 'war'

    // To generate IntelliJ IDEA project files
    id 'idea'

    // Apply the Jacoco plugin to provide a testing interface
    id 'jacoco'

    // Apply the Application plugin for Jacoco Support
    id 'application'
}

repositories {
    jcenter()
}

dependencies {
    // Use Spring MVC
    implementation 'org.springframework:spring-context:5.2.9.RELEASE'
    implementation 'org.springframework:spring-webmvc:5.2.9.RELEASE'
    implementation 'org.springframework:spring-orm:5.2.9.RELEASE'
    implementation 'org.springframework:spring-jdbc:5.2.9.RELEASE'

    implementation 'org.slf4j:slf4j-api:1.6.6'
    implementation 'org.aspectj:aspectjrt:1.6.10'
    implementation 'javax.inject:javax.inject:1'
    implementation 'javax.servlet:jstl:1.2'
    runtimeOnly 'org.slf4j:jcl-over-slf4j:1.6.6'
    runtimeOnly 'org.slf4j:slf4j-log4j12:1.6.6'
    runtimeOnly 'log4j:log4j:1.2.15'

    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'


    // Hibernate 
    implementation 'org.hibernate:hibernate-core:5.4.22.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.4.22.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.1.6.Final'
    implementation 'org.apache.commons:commons-dbcp2:2.8.0'

    // Prodution Datasource
    implementation 'org.apache.tomcat:tomcat-dbcp:9.0.39'

    // MySQL Backend
    implementation "mysql:mysql-connector-java:8.0.21"

    // Use Spring Test API for testing
    testImplementation 'org.springframework:spring-test:5.2.9.RELEASE'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

group = 'au.usyd.elec5619'
version = '1.0-SNAPSHOT'
description = 'Unmask Webapp'
sourceCompatibility = '1.8'

war {
    enabled = true
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()

    // generate jacoco report after every test
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    reports {
        html.enabled true
        csv.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            // Tests must have a minimum of 75% code coverage
            limit {
                minimum = 0.75
            }
        }
    }
}

task applicationCodeCoverageReport(type: JacocoReport) {
    executionData run
    sourceSets sourceSets.main
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}