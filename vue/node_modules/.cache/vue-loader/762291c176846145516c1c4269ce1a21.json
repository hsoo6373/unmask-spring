{"remainingRequest":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/src/components/Observer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/src/components/Observer.vue","mtime":1604484398282},{"path":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdvYnNlcnZlcicsCiAgICBkYXRhOiBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBvYnNlcnZlcjogbnVsbCwKICAgICAgICB9OwogICAgfSwKICAgIG1vdW50ZWQ6IGZ1bmN0aW9uKCkgewogICAgICAgIGxldCBvcHRpb24gPSB7CiAgICAgICAgICAgIHJvb3RNYXJnaW46ICcwcHggMHB4IDIwMHB4IDBweCcsCiAgICAgICAgfTsKICAgICAgICB0aGlzLm9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChbZW50cnldKSA9PiB7CiAgICAgICAgICAgIGlmIChlbnRyeSAmJiBlbnRyeS5pc0ludGVyc2VjdGluZykgewogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnaW50ZXJzZWN0Jyk7CiAgICAgICAgICAgIH0KICAgICAgICB9LCBvcHRpb24pOwogICAgICAgIAogICAgICAgIHRoaXMub2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLiRlbCk7CiAgICB9Cn0K"},{"version":3,"sources":["Observer.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Observer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div></div>\n</template>\n\n<script>\n    export default {\n        name: 'observer',\n        data: function() {\n            return {\n                observer: null,\n            };\n        },\n        mounted: function() {\n            let option = {\n                rootMargin: '0px 0px 200px 0px',\n            };\n            this.observer = new IntersectionObserver(([entry]) => {\n                if (entry && entry.isIntersecting) {\n                    this.$emit('intersect');\n                }\n            }, option);\n            \n            this.observer.observe(this.$el);\n        }\n    }\n</script>"]}]}