{"remainingRequest":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/src/components/PollyAudio.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/src/components/PollyAudio.vue","mtime":1604484398285},{"path":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jacobsood/Documents/USYD_2020/ELEC5619/unmask-spring/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUG9sbHlBdWRpbycsCiAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gewogICAgICBwbGF5RGVsYXk6IDMwMDAsCiAgICAgIGludGVydmFsOiB1bmRlZmluZWQsCiAgICAgIGF1ZGlvc1BsYXlpbmc6IDAsCiAgICAgIG1heEF1ZGlvUGxheWluZzogMywKICAgICAgcmV2ZXJiSW5kZXg6IDAsCiAgICAgIGF1ZGlvQ29udGV4dDogdW5kZWZpbmVkLAogICAgICByZXZlcmJTYW1wbGVzOiBbIAogICAgICAgICdodHRwczovL2hyaXRodmlrc29vZC5zMy1hcC1zb3V0aGVhc3QtMi5hbWF6b25hd3MuY29tL3VubWFzay9hdWRpby9SZXZlcmJTYW1wbGUvY3VzdG9tUmV2ZXJiLndhdicsCiAgICAgICAgJ2h0dHBzOi8vaHJpdGh2aWtzb29kLnMzLWFwLXNvdXRoZWFzdC0yLmFtYXpvbmF3cy5jb20vdW5tYXNrL2F1ZGlvL1JldmVyYlNhbXBsZS9jdXN0b21SZXZlcmIyLndhdicsCiAgICAgIF0sCiAgICAgIHF1YWRyYW50OiB7CiAgICAgICAgRklSU1Q6IHsKICAgICAgICAgIHhQb3M6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDExKSAqIDEwMCwKICAgICAgICAgIHlQb3M6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDExKSAqIDEwMCwKICAgICAgICAgIHpQb3M6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDExKSAqIDEwMCwKICAgICAgICB9LAogICAgICAgIFNFQ09ORDogewogICAgICAgICAgeFBvczogTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTEpICogLTEwMCwKICAgICAgICAgIHlQb3M6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDExKSAqIC0xMDAsCiAgICAgICAgICB6UG9zOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMSkgKiAxMDAsCiAgICAgICAgfSwKICAgICAgICBUSElSRDogewogICAgICAgICAgeFBvczogTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTEpICogLTEwMCwKICAgICAgICAgIHlQb3M6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDExKSAqIDEwMCwKICAgICAgICAgIHpQb3M6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDExKSAqIC0xMDAsCiAgICAgICAgfSwKICAgICAgICBGT1VSVEg6IHsKICAgICAgICAgIHhQb3M6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDExKSAqIDEwMCwKICAgICAgICAgIHlQb3M6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDExKSAqIC0xMDAsCiAgICAgICAgICB6UG9zOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMSkgKiAtMTAwLAogICAgICAgIH0KICAgICAgfSwKICAgICAgcXVhZHJhbnRJbmRleDogMCwKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbigpIHsKICAgIHRoaXMuc2V0dXAoKTsKICAgIHdpbmRvdy5zZXRUaW1lb3V0KHRoaXMucGxheUF1ZGlvLCB0aGlzLnBsYXlEZWxheSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZXR1cDogZnVuY3Rpb24oKSB7CiAgICAgIHRoaXMuYXVkaW9Db250ZXh0ID0gdGhpcy5jcmVhdGVBdWRpb0N0eCgpOwogICAgICB0aGlzLmNyZWF0ZUxpc3RlbmVyKCk7CiAgICB9LAogICAgCiAgICBjcmVhdGVMaXN0ZW5lcjogZnVuY3Rpb24oKSB7CiAgICAgIGNvbnN0IGxpc3RlbmVyID0gdGhpcy5hdWRpb0NvbnRleHQubGlzdGVuZXI7CiAgICAgIGNvbnN0IHBvc1ggPSAwOwogICAgICBjb25zdCBwb3NZID0gMDsKICAgICAgY29uc3QgcG9zWiA9IDA7CiAgICAgIGxpc3RlbmVyLnNldFBvc2l0aW9uKHBvc1gsIHBvc1ksIHBvc1opOwogICAgICAKICAgICAgbGlzdGVuZXIuZm9yd2FyZFgudmFsdWUgPSAwOwogICAgICBsaXN0ZW5lci5mb3J3YXJkWS52YWx1ZSA9IDA7CiAgICAgIGxpc3RlbmVyLmZvcndhcmRaLnZhbHVlID0gMTsKICAgICAgbGlzdGVuZXIudXBYLnZhbHVlID0gMDsKICAgICAgbGlzdGVuZXIudXBZLnZhbHVlID0gLTE7CiAgICAgIGxpc3RlbmVyLnVwWi52YWx1ZSA9IDA7CiAgICB9LAogICAgY3JlYXRlQXVkaW9DdHg6IGZ1bmN0aW9uKCkgewogICAgICBjb25zdCBBdWRpb0NvbnRleHQgPSB3aW5kb3cuQXVkaW9Db250ZXh0IHx8IHdpbmRvdy53ZWJraXRBdWRpb0NvbnRleHQ7CiAgICAgIHJldHVybiBuZXcgQXVkaW9Db250ZXh0KCk7CiAgICB9LAogICAgcGxheUF1ZGlvOiBmdW5jdGlvbigpIHsKICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTsKICAgICAgCiAgICAgIGNvbnN0IHNvdXJjZVVybCA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0UmVjb3JkaW5ncygpOwogICAgICBjb25zb2xlLmxvZyhzb3VyY2VVcmwpOwogICAgICBjb25zdCBzb3VyY2VOb2RlID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyU291cmNlKCk7CiAgICAgIAogICAgICB0aGlzLnNldHVwQXVkaW8oc291cmNlVXJsLCBzb3VyY2VOb2RlKQogICAgICAudGhlbihzb3VyY2VOb2RlLmNvbm5lY3QodGhpcy5jcmVhdGVHYWluKDEpKS5jb25uZWN0KHRoaXMuY3JlYXRlUGFubmVyKCkpKS50aGVuKHNvdXJjZU5vZGUuc3RhcnQoKSk7CiAgICAgIAogICAgICAvLyB1cGRhdGUgcGxheSBkZWxheSB0byBiZSBiZXR3ZWVuIDEyLTE2IHNlY29uZHMKICAgICAgdGhpcy5wbGF5RGVsYXkgPSAoTWF0aC5yYW5kb20oKSAqICgxNyAtIDEyKSArIDEyKSAqIDEwMDA7CiAgICAgIHRoaXMuaW50ZXJ2YWwgPSB3aW5kb3cuc2V0SW50ZXJ2YWwodGhpcy5wbGF5QXVkaW8sIHRoaXMucGxheURlbGF5KTsKICAgIH0sCiAgICBjcmVhdGVHYWluOiBmdW5jdGlvbih2b2x1bWUpIHsKICAgICAgY29uc3QgZ2Fpbk5vZGUgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVHYWluKCk7CiAgICAgIGdhaW5Ob2RlLmdhaW4udmFsdWUgPSB2b2x1bWU7CiAgICAgIHJldHVybiBnYWluTm9kZTsKICAgIH0sCiAgICBjcmVhdGVSZXZlcmI6IGZ1bmN0aW9uKCkgewogICAgICBjb25zdCBpbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuc2FtcGxlU2l6ZSk7CiAgICAgIHZhciByZXZlcmJVcmwgPSB0aGlzLnJldmVyYlNhbXBsZXNbaW5kZXhdOwogICAgICBjb25zdCByZXZlcmJOb2RlID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlQ29udm9sdmVyKCk7CiAgICAgIHRoaXMuc2V0dXBBdWRpbyhyZXZlcmJVcmwsIHJldmVyYk5vZGUpLnRoZW4ocmV2ZXJiTm9kZS5jb25uZWN0KHRoaXMuZ2V0UGFubmVyKCkpKTsKICAgICAgcmV0dXJuIHJldmVyYk5vZGU7CiAgICB9LAogICAgY3JlYXRlUGFubmVyOiBmdW5jdGlvbigpIHsKICAgICAgdmFyIHBhbm5lciA9IHRoaXMuYXVkaW9Db250ZXh0LmNyZWF0ZVBhbm5lcigpOwogICAgICBwYW5uZXIucGFubmluZ01vZGVsID0gJ0hSVEYnOwogICAgICBwYW5uZXIuZGlzdGFuY2VNb2RlbCA9ICdsaW5lYXInOwogICAgICAKICAgICAgY29uc3QgY3VycmVudFF1YWQgPSB0aGlzLmN1cnJlbnRRdWFkcmFudDsKICAgICAgbGV0IHhQb3MgPSBjdXJyZW50UXVhZC54UG9zOwogICAgICBsZXQgeVBvcyA9IGN1cnJlbnRRdWFkLnlQb3M7CiAgICAgIGxldCB6UG9zID0gY3VycmVudFF1YWQuelBvczsKICAgICAgdGhpcy5xdWFkcmFudEluZGV4ID0gdGhpcy5xdWFkcmFudEluZGV4ID49IDMgPyAwIDogKyt0aGlzLnF1YWRyYW50SW5kZXg7CiAgICAgIAogICAgICBwYW5uZXIuc2V0UG9zaXRpb24oeFBvcywgeVBvcywgelBvcyk7CiAgICAgIAogICAgICAKICAgICAgdmFyIGFuYWx5c2VyID0gdGhpcy5hdWRpb0NvbnRleHQuY3JlYXRlQW5hbHlzZXIoKTsKICAgICAgdmFyIGRpc3RvcnRpb24gPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVXYXZlU2hhcGVyKCk7CiAgICAgIHZhciBiaXF1YWRGaWx0ZXIgPSB0aGlzLmF1ZGlvQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTsKICAgICAgCiAgICAgIC8vIGNvbm5lY3QgdGhlIG5vZGVzIHRvZ2V0aGVyCiAgICAgIAogICAgICBhbmFseXNlci5jb25uZWN0KGRpc3RvcnRpb24pOwogICAgICBkaXN0b3J0aW9uLmNvbm5lY3QoYmlxdWFkRmlsdGVyKTsKICAgICAgYmlxdWFkRmlsdGVyLmNvbm5lY3QocGFubmVyKTsKICAgICAgCiAgICAgIC8vIE1hbmlwdWxhdGUgdGhlIEJpcXVhZCBmaWx0ZXIKICAgICAgCiAgICAgIGJpcXVhZEZpbHRlci50eXBlID0gImxvd3NoZWxmIjsKICAgICAgYmlxdWFkRmlsdGVyLmZyZXF1ZW5jeS5zZXRWYWx1ZUF0VGltZSgxMDAwLCB0aGlzLmF1ZGlvQ29udGV4dC5jdXJyZW50VGltZSk7CiAgICAgIAogICAgICAKICAgICAgcGFubmVyLmNvbm5lY3QodGhpcy5hdWRpb0NvbnRleHQuZGVzdGluYXRpb24pOwogICAgICByZXR1cm4gYW5hbHlzZXI7CiAgICB9LAogICAgc2V0dXBBdWRpbzogYXN5bmMgZnVuY3Rpb24odXJsLCBub2RlKSB7CiAgICAgIGF4aW9zLmdldCh1cmwsIHsgcmVzcG9uc2VUeXBlOiAnYXJyYXlidWZmZXInIH0pLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHRoaXMuYXVkaW9Db250ZXh0LmRlY29kZUF1ZGlvRGF0YShyZXNwb25zZS5kYXRhLCBhdWRpb0J1ZmZlciA9PiB7CiAgICAgICAgICBub2RlLmJ1ZmZlciA9IGF1ZGlvQnVmZmVyOwogICAgICAgIH0pCiAgICAgIH0pOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHNhbXBsZVNpemU6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy5yZXZlcmJTYW1wbGVzLmxlbmd0aDsKICAgIH0sCiAgICBjdXJyZW50UXVhZHJhbnQ6IGZ1bmN0aW9uKCkgewogICAgICBjb25zdCBxdWFkcyA9IFsnRklSU1QnLCAnU0VDT05EJywgJ0ZPVVJUSCcsICdUSElSRCddOwogICAgICByZXR1cm4gdGhpcy5xdWFkcmFudFtxdWFkc1t0aGlzLnF1YWRyYW50SW5kZXhdXTsKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["PollyAudio.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PollyAudio.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div></div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'PollyAudio',\n  data: function() {\n    return {\n      playDelay: 3000,\n      interval: undefined,\n      audiosPlaying: 0,\n      maxAudioPlaying: 3,\n      reverbIndex: 0,\n      audioContext: undefined,\n      reverbSamples: [ \n        'https://hrithviksood.s3-ap-southeast-2.amazonaws.com/unmask/audio/ReverbSample/customReverb.wav',\n        'https://hrithviksood.s3-ap-southeast-2.amazonaws.com/unmask/audio/ReverbSample/customReverb2.wav',\n      ],\n      quadrant: {\n        FIRST: {\n          xPos: Math.floor(Math.random() * 11) * 100,\n          yPos: Math.floor(Math.random() * 11) * 100,\n          zPos: Math.floor(Math.random() * 11) * 100,\n        },\n        SECOND: {\n          xPos: Math.floor(Math.random() * 11) * -100,\n          yPos: Math.floor(Math.random() * 11) * -100,\n          zPos: Math.floor(Math.random() * 11) * 100,\n        },\n        THIRD: {\n          xPos: Math.floor(Math.random() * 11) * -100,\n          yPos: Math.floor(Math.random() * 11) * 100,\n          zPos: Math.floor(Math.random() * 11) * -100,\n        },\n        FOURTH: {\n          xPos: Math.floor(Math.random() * 11) * 100,\n          yPos: Math.floor(Math.random() * 11) * -100,\n          zPos: Math.floor(Math.random() * 11) * -100,\n        }\n      },\n      quadrantIndex: 0,\n    };\n  },\n  mounted: function() {\n    this.setup();\n    window.setTimeout(this.playAudio, this.playDelay);\n  },\n  methods: {\n    setup: function() {\n      this.audioContext = this.createAudioCtx();\n      this.createListener();\n    },\n    \n    createListener: function() {\n      const listener = this.audioContext.listener;\n      const posX = 0;\n      const posY = 0;\n      const posZ = 0;\n      listener.setPosition(posX, posY, posZ);\n      \n      listener.forwardX.value = 0;\n      listener.forwardY.value = 0;\n      listener.forwardZ.value = 1;\n      listener.upX.value = 0;\n      listener.upY.value = -1;\n      listener.upZ.value = 0;\n    },\n    createAudioCtx: function() {\n      const AudioContext = window.AudioContext || window.webkitAudioContext;\n      return new AudioContext();\n    },\n    playAudio: function() {\n      clearInterval(this.interval);\n      \n      const sourceUrl = this.$store.getters.getRecordings();\n      console.log(sourceUrl);\n      const sourceNode = this.audioContext.createBufferSource();\n      \n      this.setupAudio(sourceUrl, sourceNode)\n      .then(sourceNode.connect(this.createGain(1)).connect(this.createPanner())).then(sourceNode.start());\n      \n      // update play delay to be between 12-16 seconds\n      this.playDelay = (Math.random() * (17 - 12) + 12) * 1000;\n      this.interval = window.setInterval(this.playAudio, this.playDelay);\n    },\n    createGain: function(volume) {\n      const gainNode = this.audioContext.createGain();\n      gainNode.gain.value = volume;\n      return gainNode;\n    },\n    createReverb: function() {\n      const index = Math.floor(Math.random() * this.sampleSize);\n      var reverbUrl = this.reverbSamples[index];\n      const reverbNode = this.audioContext.createConvolver();\n      this.setupAudio(reverbUrl, reverbNode).then(reverbNode.connect(this.getPanner()));\n      return reverbNode;\n    },\n    createPanner: function() {\n      var panner = this.audioContext.createPanner();\n      panner.panningModel = 'HRTF';\n      panner.distanceModel = 'linear';\n      \n      const currentQuad = this.currentQuadrant;\n      let xPos = currentQuad.xPos;\n      let yPos = currentQuad.yPos;\n      let zPos = currentQuad.zPos;\n      this.quadrantIndex = this.quadrantIndex >= 3 ? 0 : ++this.quadrantIndex;\n      \n      panner.setPosition(xPos, yPos, zPos);\n      \n      \n      var analyser = this.audioContext.createAnalyser();\n      var distortion = this.audioContext.createWaveShaper();\n      var biquadFilter = this.audioContext.createBiquadFilter();\n      \n      // connect the nodes together\n      \n      analyser.connect(distortion);\n      distortion.connect(biquadFilter);\n      biquadFilter.connect(panner);\n      \n      // Manipulate the Biquad filter\n      \n      biquadFilter.type = \"lowshelf\";\n      biquadFilter.frequency.setValueAtTime(1000, this.audioContext.currentTime);\n      \n      \n      panner.connect(this.audioContext.destination);\n      return analyser;\n    },\n    setupAudio: async function(url, node) {\n      axios.get(url, { responseType: 'arraybuffer' }).then(response => {\n        this.audioContext.decodeAudioData(response.data, audioBuffer => {\n          node.buffer = audioBuffer;\n        })\n      });\n    }\n  },\n  computed: {\n    sampleSize: function() {\n      return this.reverbSamples.length;\n    },\n    currentQuadrant: function() {\n      const quads = ['FIRST', 'SECOND', 'FOURTH', 'THIRD'];\n      return this.quadrant[quads[this.quadrantIndex]];\n    },\n  },\n}\n</script>"]}]}